{"version":3,"file":"static/js/686.0f49e3d7.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","EmployeeDetails.js","EmployeeList.js","EmployeeContainer.js"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from \"react\";\r\n\r\nfunction EmployeeDetails(props) {\r\n\r\n    const [empList, updateEmpList] = useState([]);\r\n    const [name, updateName] = useState(\"\");\r\n    const [email, updateEmail] = useState(\"\");\r\n    const [address, updateAddress] = useState(\"\");\r\n    const [city, updateCity] = useState(\"\");\r\n    const [accType, updateAccType] = useState(\"savings\");\r\n\r\n    function addEmployee() {\r\n        console.log(\"add employee\", name, email);\r\n        if (!name) {\r\n            alert(\"please enter name\");\r\n        }\r\n        var updatedEmpList = [...empList];\r\n        // let updatedEmpList = empList;\r\n        updatedEmpList.push({\r\n            name: name,\r\n            email: email,\r\n            address: address,\r\n            city: city,\r\n            accType: accType\r\n        });\r\n        updateEmpList(updatedEmpList);\r\n        console.log(\"updated state\", updatedEmpList);\r\n        resetForm();\r\n        props.onEmployeeListChange(updatedEmpList);\r\n        // props.onEmployeeListChange(empList); // TODO\r\n    }\r\n\r\n    function updateEmpName(event) {\r\n        updateName(event.target.value);\r\n    }\r\n\r\n    function onAccTypeSavingsChange(event) {\r\n        if(event.target.checked) {\r\n            updateAccType(\"savings\");\r\n        }\r\n    }\r\n\r\n    function resetForm() {\r\n        updateName(\"\");\r\n        updateEmail(\"\");\r\n        updateAddress(\"\");\r\n        updateCity(\"\");\r\n        updateAccType(\"savings\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <form action=\"index.html\" method=\"post\" style={{width: '100%'}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <label htmlFor=\"txtName\" className=\"form-label\">Name</label>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <input type=\"text\" required className=\"form-control\" name=\"txtName\" id=\"txtName\" value={name}\r\n                            onChange={updateEmpName}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <label htmlFor=\"txtEmail\" className=\"form-label\">Email</label>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <input type=\"email\" required className=\"form-control\" name=\"txtEmail\" id=\"txtEmail\" value={email}\r\n                            onChange={e => updateEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <label htmlFor=\"txtAddress\" className=\"form-label\">Address: </label>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <textarea className=\"form-control\" name=\"txtAddress\" id=\"txtAddress\" value={address}\r\n                            onChange={e => updateAddress(e.target.value)}\r\n                        ></textarea>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <label htmlFor=\"ddlCity\">City:</label>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <select name=\"ddlCity\" id=\"ddlCity\" className=\"form-select\" value={city}\r\n                            onChange={e => updateCity(e.target.value)}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Mumbai\">Mumbai</option>\r\n                            <option value=\"Delhi\">Delhi</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <label htmlFor=\"chkAcctype\">Account Type:</label>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" type=\"radio\" name=\"accType\" value=\"savings\" id=\"aacTypeSavings\"\r\n                                checked={accType==='savings'}\r\n                                onChange={onAccTypeSavingsChange}\r\n                            />\r\n                                <label className=\"form-check-label\" htmlFor=\"aacTypeSavings\">Savings</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" type=\"radio\" name=\"accType\" value=\"current\" id=\"accTypeCurrent\"\r\n                                checked={accType==='current'}\r\n                                onChange={e => e.target.checked && updateAccType(\"current\")}\r\n                            />\r\n                                <label className=\"form-check-label\" htmlFor=\"accTypeCurrent\">Current</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n                <div className=\"row\">\r\n                    <div className=\"col-3\"></div>\r\n                    <div className=\"col-9\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={addEmployee}>Add</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeeDetails;","import './App.css';\r\n\r\nfunction EmployeeList(props) {\r\n    const employees = props.employees || [];\r\n    return (\r\n        <div>\r\n            <div>Number of employees: {employees.length}</div>\r\n            <div>\r\n                {\r\n                    employees.map((emp, i) =>\r\n                        <div key={\"emp\" + i.toString()} className=\"emp-row\">\r\n                            <div>{emp.name}</div>\r\n                            <div>{emp.email}</div>\r\n                            <div>{emp.address}</div>\r\n                            <div>{emp.city}</div>\r\n                            <div>{emp.accType}</div>\r\n                            <div>\r\n                                <button type='button' onClick={() => props.onEmployeeEdit(emp)}>Edit</button>\r\n                                <button type='button'>Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeeList;","\r\nimport { useState } from 'react';\r\nimport EmployeeDetails from './EmployeeDetails';\r\nimport EmployeeList from './EmployeeList';\r\n\r\n\r\n\r\n\r\nfunction EmployeeContainer(props) {\r\n\r\n    const [empObjList, setEmpObjList] = useState([]);\r\n    const [editEmpObj, setEditEmpObj] = useState({});\r\n\r\n\r\n    function updateEmpList(newList) {\r\n        console.log(\"***\", newList);\r\n        setEmpObjList(newList);\r\n    }\r\n\r\n    function onEmpEdit(editObj) {\r\n        console.log(\"Emp object for edit\", editObj);\r\n        setEditEmpObj(editObj);\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='emp-container'>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 col-sm-12 left-section\">\r\n                    <EmployeeList employees={empObjList} onEmployeeEdit={onEmpEdit} />\r\n                </div>\r\n                <div className=\"col-md-6 col-sm-12 right-section\">\r\n                    <EmployeeDetails onEmployeeListChange={updateEmpList} editObj={editEmpObj} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default EmployeeContainer;\r\n"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","props","useState","empList","updateEmpList","name","updateName","email","updateEmail","address","updateAddress","city","updateCity","accType","updateAccType","action","method","style","width","className","htmlFor","type","required","id","value","onChange","event","target","e","checked","onClick","console","log","alert","updatedEmpList","push","onEmployeeListChange","employees","length","map","emp","i","onEmployeeEdit","toString","empObjList","setEmpObjList","editEmpObj","setEditEmpObj","editObj","newList"],"sourceRoot":""}