{"version":3,"file":"static/js/380.ee511197.chunk.js","mappings":"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","sources":["UserDetails.js","apis/userAPI.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { getUserById, insertUser } from \"./apis/userAPI\";\r\n\r\nfunction UserDetails(props) {\r\n\r\n    const [name, updateName] = useState(\"\");\r\n    const [email, updateEmail] = useState(\"\");\r\n    const [address, updateAddress] = useState(\"\");\r\n    const [city, updateCity] = useState(\"\");\r\n    const [accType, updateAccType] = useState(\"savings\");\r\n    const [userId, setUserId] = useState(11);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const routeParams = useParams();\r\n\r\n    useEffect(() => {\r\n        if (routeParams.id) {\r\n            getUserById(routeParams.id)\r\n            .then((response) => response.json())\r\n            .then((userDetails) => { \r\n                console.log(userDetails);\r\n                updateName(userDetails.name);\r\n                updateEmail(userDetails.email);\r\n            });\r\n        }\r\n    }, [routeParams.id]);\r\n\r\n\r\n    function addUser() {\r\n        const newUserObj = {\r\n            \"id\": userId,\r\n            \"name\": name,\r\n            \"email\": email,\r\n            \"address\": {\r\n                \"street\": address,\r\n                \"suite\": \"\",\r\n                \"city\": city,\r\n                \"zipcode\": \"\"\r\n            }\r\n        };\r\n        insertUser(newUserObj).then((response) => response.json())\r\n            .then((json) => { \r\n                console.log(json);\r\n                setUserId(userId + 1);\r\n                resetForm();\r\n                alert(\"user added successfully\");\r\n                navigate(\"/users\");\r\n            });\r\n    }\r\n\r\n    function updateuserName(event) {\r\n        updateName(event.target.value);\r\n    }\r\n\r\n    function onAccTypeSavingsChange(event) {\r\n        if (event.target.checked) {\r\n            updateAccType(\"savings\");\r\n        }\r\n    }\r\n\r\n    function resetForm() {\r\n        updateName(\"\");\r\n        updateEmail(\"\");\r\n        updateAddress(\"\");\r\n        updateCity(\"\");\r\n        updateAccType(\"savings\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <form action=\"index.html\" method=\"post\" style={{ width: '100%' }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <label htmlFor=\"txtName\" className=\"form-label\">Name</label>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <input type=\"text\" required className=\"form-control\" name=\"txtName\" id=\"txtName\" value={name}\r\n                            onChange={updateuserName}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <label htmlFor=\"txtEmail\" className=\"form-label\">Email</label>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <input type=\"email\" required className=\"form-control\" name=\"txtEmail\" id=\"txtEmail\" value={email}\r\n                            onChange={e => updateEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <label htmlFor=\"txtAddress\" className=\"form-label\">Address: </label>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <textarea className=\"form-control\" name=\"txtAddress\" id=\"txtAddress\" value={address}\r\n                            onChange={e => updateAddress(e.target.value)}\r\n                        ></textarea>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <label htmlFor=\"ddlCity\">City:</label>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <select name=\"ddlCity\" id=\"ddlCity\" className=\"form-select\" value={city}\r\n                            onChange={e => updateCity(e.target.value)}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Mumbai\">Mumbai</option>\r\n                            <option value=\"Delhi\">Delhi</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <label htmlFor=\"chkAcctype\">Account Type:</label>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" type=\"radio\" name=\"accType\" value=\"savings\" id=\"aacTypeSavings\"\r\n                                checked={accType === 'savings'}\r\n                                onChange={onAccTypeSavingsChange}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"aacTypeSavings\">Savings</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" type=\"radio\" name=\"accType\" value=\"current\" id=\"accTypeCurrent\"\r\n                                checked={accType === 'current'}\r\n                                onChange={e => e.target.checked && updateAccType(\"current\")}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"accTypeCurrent\">Current</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\"></div>\r\n                    <div className=\"col-9\">\r\n                        {\r\n                            !routeParams.id && <button type=\"button\" className=\"btn btn-primary\" onClick={addUser}>Add</button>\r\n                        }\r\n                        {\r\n                            routeParams.id && <button type=\"button\" className=\"btn btn-primary\">Update</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDetails;","\r\nconst baseUserUrl = \"https://jsonplaceholder.typicode.com/users\";\r\n\r\nexport const getUsers = () => {\r\n    return fetch(baseUserUrl, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n    });\r\n}\r\n\r\nexport const getUserById = (id) => {\r\n    return fetch(baseUserUrl + \"/\" + id, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n    });\r\n}\r\n\r\nexport const insertUser = (newUserObj) => {\r\n    return fetch(baseUserUrl, {\r\n        method: 'POST',\r\n        body: JSON.stringify(newUserObj),\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n    });\r\n}"],"names":["props","useState","name","updateName","email","updateEmail","address","updateAddress","city","updateCity","accType","updateAccType","userId","setUserId","navigate","useNavigate","routeParams","useParams","useEffect","id","getUserById","then","response","json","userDetails","console","log","action","method","style","width","className","htmlFor","type","required","value","onChange","event","target","e","checked","onClick","newUserObj","insertUser","alert","baseUserUrl","getUsers","fetch","headers","body","JSON","stringify"],"sourceRoot":""}